/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 05:17:25 GMT 2024
 */

package org.myrobotlab.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.AbstractMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.myrobotlab.cache.LRUCache;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LRUCache_ESTest extends LRUCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LRUCache<Integer, Integer> lRUCache0 = new LRUCache<Integer, Integer>(0);
      Integer integer0 = new Integer(0);
      AbstractMap.SimpleImmutableEntry<Integer, Integer> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, Integer>(integer0, integer0);
      AbstractMap.SimpleEntry<Integer, Integer> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, Integer>(abstractMap_SimpleImmutableEntry0);
      boolean boolean0 = lRUCache0.removeEldestEntry(abstractMap_SimpleEntry0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LRUCache<Integer, Integer> lRUCache0 = new LRUCache<Integer, Integer>(1);
      Integer integer0 = new Integer(16);
      AbstractMap.SimpleImmutableEntry<Integer, Integer> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, Integer>(integer0, integer0);
      boolean boolean0 = lRUCache0.removeEldestEntry(abstractMap_SimpleImmutableEntry0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LRUCache<Integer, Integer> lRUCache0 = new LRUCache<Integer, Integer>((-1));
      Integer integer0 = new Integer(1751);
      AbstractMap.SimpleImmutableEntry<Integer, Integer> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, Integer>(integer0, integer0);
      boolean boolean0 = lRUCache0.removeEldestEntry(abstractMap_SimpleImmutableEntry0);
      assertTrue(boolean0);
  }
}
