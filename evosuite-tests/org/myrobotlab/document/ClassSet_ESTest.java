/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 02:11:12 GMT 2024
 */

package org.myrobotlab.document;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import org.myrobotlab.document.ClassSet;
import org.myrobotlab.document.Classification;
import org.myrobotlab.math.geometry.Rectangle;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClassSet_ESTest extends ClassSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClassSet classSet0 = new ClassSet();
      Rectangle rectangle0 = new Rectangle();
      Classification classification0 = new Classification("", 1392409281320L, rectangle0, 1392409281320L, 0.0);
      classSet0.add(classification0);
      classSet0.countLimit = 351;
      classSet0.countLimit = (-1193);
      Classification classification1 = new Classification("", 1392409281320L, rectangle0, 0.0F, 1811.01058968457);
      classification1.setTs(2233L);
      classSet0.add(classification1);
      long long0 = classSet0.getTimeSinceMs();
      assertEquals(1392409279087L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassSet classSet0 = new ClassSet();
      assertEquals(1392409281320L, classSet0.getTimeSinceMs());
      
      Rectangle rectangle0 = new Rectangle();
      Classification classification0 = new Classification((String) null, 0.0F, rectangle0, 0.0, 1424.57789083);
      classSet0.add(classification0);
      long long0 = classSet0.getTimeSinceMs();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClassSet classSet0 = new ClassSet();
      Classification classification0 = new Classification("");
      List<Classification> list0 = List.of(classification0, classification0, classification0, classification0, classification0, classification0);
      classSet0.timeline = list0;
      // Undeclared exception!
      try { 
        classSet0.add(classification0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ImmutableCollections", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClassSet classSet0 = new ClassSet();
      // Undeclared exception!
      try { 
        classSet0.add((Classification) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.document.ClassSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClassSet classSet0 = new ClassSet();
      Rectangle rectangle0 = new Rectangle(0.0F, (-820.74F), 0.0F, 1.0F);
      classSet0.countLimit = 0;
      Classification classification0 = new Classification("lt65", 0.0F, rectangle0);
      // Undeclared exception!
      try { 
        classSet0.add(classification0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ClassSet classSet0 = new ClassSet();
      classSet0.countLimit = 2;
      Rectangle rectangle0 = new Rectangle();
      Classification classification0 = new Classification("", (-1.0F), rectangle0, (-1.0F), 0.0F);
      classSet0.add(classification0);
      classSet0.add(classification0);
      classSet0.add(classification0);
      assertEquals((-1.0), classification0.getCenterX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ClassSet classSet0 = new ClassSet();
      Rectangle rectangle0 = new Rectangle();
      Classification classification0 = new Classification((String) null, 0.0F, rectangle0, 0.0, 1424.57789083);
      classSet0.add(classification0);
      System.setCurrentTimeMillis(0L);
      long long0 = classSet0.getTimeSinceMs();
      assertEquals((-1392409281320L), long0);
  }
}
