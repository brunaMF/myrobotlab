/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 02:11:05 GMT 2024
 */

package org.myrobotlab.document;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.image.BufferedImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import org.myrobotlab.document.Classification;
import org.myrobotlab.math.geometry.Rectangle;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Classification_ESTest extends Classification_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Classification classification0 = new Classification("5`y^q+82'cKl@GHJ");
      classification0.setBoundingBox((-260), 0, (-260), 0);
      assertEquals(1392409281320L, (long)classification0.getTs());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Classification classification0 = new Classification("centerX");
      Object object0 = new Object();
      classification0.setField("image", object0);
      classification0.getImage();
      assertEquals(1392409281320L, (long)classification0.getTs());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Classification classification0 = new Classification("");
      Long long0 = classification0.getTs();
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Classification classification0 = new Classification("", (-2264.2F), rectangle0);
      assertEquals(1392409281320L, (long)classification0.getTs());
      
      classification0.removeField("ts");
      classification0.getTs();
      assertEquals((-2264.2F), classification0.getConfidence(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Classification classification0 = new Classification("*Hz]4V{8-L<");
      classification0.setTs((-3719L));
      Long long0 = classification0.getTs();
      assertNotNull(long0);
      assertEquals((-3719L), (long)long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Classification classification0 = new Classification("");
      classification0.getLabel();
      assertEquals(1392409281320L, (long)classification0.getTs());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0F, 2039.0F, 3118.0F, 1.0F);
      Classification classification0 = new Classification("", 2039.0F, rectangle0);
      String string0 = classification0.getLabel();
      assertNotNull(string0);
      assertEquals(2039.0F, classification0.getConfidence(), 0.01F);
      assertEquals(1392409281320L, (long)classification0.getTs());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Classification classification0 = new Classification("");
      classification0.setConfidence(0.0F);
      Float float0 = classification0.getConfidence();
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      assertEquals(1392409281320L, (long)classification0.getTs());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0F, 2039.0F, 3118.0F, 1.0F);
      Classification classification0 = new Classification("", 2039.0F, rectangle0);
      Float float0 = classification0.getConfidence();
      assertEquals(1392409281320L, (long)classification0.getTs());
      assertEquals(2039.0F, (float)float0, 0.01F);
      assertNotNull(float0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Classification classification0 = new Classification("");
      classification0.getConfidence();
      assertEquals(1392409281320L, (long)classification0.getTs());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Classification classification0 = new Classification("5`y^q+82'cKl@GHJ");
      classification0.setCenterY(0.0);
      Double double0 = classification0.getCenterY();
      assertEquals(0.0, (double)double0, 0.01);
      assertEquals(1392409281320L, (long)classification0.getTs());
      assertNotNull(double0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-4294.4F), (-4294.4F), (-4294.4F), (-4294.4F));
      Classification classification0 = new Classification("z|Lml$r&[n[2\"Rg", (-4294.4F), rectangle0, (-398.843F), (-4294.4F));
      classification0.setCenterY(2027.9905F);
      Double double0 = classification0.getCenterY();
      assertEquals(2027.990478515625, classification0.getCenterY(), 0.01);
      assertNotNull(double0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-4001.366F), (-1.0F), 0.0F, (-1.0F));
      Classification classification0 = new Classification("7=f>!*a_X", (-4001.366F), rectangle0);
      classification0.setCenterY((-1220.4226));
      Double double0 = classification0.getCenterY();
      assertEquals(1392409281320L, (long)classification0.getTs());
      assertEquals((-1220.4226), (double)double0, 0.01);
      assertEquals((-4001.366F), classification0.getConfidence(), 0.01F);
      assertNotNull(double0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Classification classification0 = new Classification("M0V", 2813.873F, rectangle0, 0.0F, 0.0);
      classification0.setCenterX(2813.873F);
      Double double0 = classification0.getCenterX();
      assertEquals(2813.873046875, classification0.getCenterX(), 0.01);
      assertNotNull(double0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Classification classification0 = new Classification("");
      classification0.getCenterX();
      assertEquals(1392409281320L, (long)classification0.getTs());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-4294.4F), (-4294.4F), (-4294.4F), (-4294.4F));
      Classification classification0 = new Classification("z|Lml$r&[n[2\"Rg", (-4294.4F), rectangle0, (-398.843F), (-4294.4F));
      Double double0 = classification0.getCenterX();
      assertEquals((-4294.39990234375), classification0.getCenterY(), 0.01);
      assertEquals((-398.8429870605469), (double)double0, 0.01);
      assertEquals(1392409281320L, (long)classification0.getTs());
      assertNotNull(double0);
      assertEquals((-4294.4F), classification0.getConfidence(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Classification classification0 = new Classification(".");
      classification0.getBoundingBox();
      assertEquals(1392409281320L, (long)classification0.getTs());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Classification classification0 = new Classification("]'H:2sEMQ2Ic9\"1K");
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      // Undeclared exception!
      try { 
        classification0.setImage(bufferedImage0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Classification classification0 = new Classification("< TsUsB?QiC6^");
      classification0.setLabel("< TsUsB?QiC6^");
      assertEquals(1392409281320L, (long)classification0.getTs());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(1.0F, 1.0F, 0.0F, 1.0F);
      Classification classification0 = new Classification(".", 1.0F, rectangle0);
      classification0.setBoundingBox(rectangle0);
      assertEquals(1392409281320L, (long)classification0.getTs());
      assertEquals(1.0F, classification0.getConfidence(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Classification classification0 = new Classification("centerX");
      classification0.getImage();
      assertEquals(1392409281320L, (long)classification0.getTs());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(1.0F, 1.0F, 0.0F, 1.0F);
      Classification classification0 = new Classification(".", 1.0F, rectangle0);
      classification0.setObject(".");
      Object object0 = classification0.getObject();
      assertEquals(1392409281320L, (long)classification0.getTs());
      assertEquals(1.0F, classification0.getConfidence(), 0.01F);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Classification classification0 = new Classification("centerX");
      classification0.setImage((BufferedImage) null);
      assertEquals(1392409281320L, (long)classification0.getTs());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Classification classification0 = new Classification("M0V", 2813.873F, rectangle0, 0.0F, 0.0);
      Double double0 = classification0.getCenterX();
      assertNotNull(double0);
      assertEquals(0.0, (double)double0, 0.01);
      assertEquals(2813.873F, classification0.getConfidence(), 0.01F);
      assertEquals(1392409281320L, (long)classification0.getTs());
      assertEquals(0.0, classification0.getCenterY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(1.0F, 1.0F, 0.0F, 1.0F);
      Classification classification0 = new Classification(".", 1.0F, rectangle0);
      Rectangle rectangle1 = classification0.getBoundingBox();
      assertNotNull(rectangle1);
      assertEquals(1392409281320L, (long)classification0.getTs());
      assertEquals(1.0F, classification0.getConfidence(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-4294.4F), (-4294.4F), (-4294.4F), (-4294.4F));
      Classification classification0 = new Classification("z|Lml$r&[n[2\"Rg", (-4294.4F), rectangle0, (-398.843F), (-4294.4F));
      Float float0 = classification0.getConfidence();
      assertEquals(1392409281320L, (long)classification0.getTs());
      assertEquals((-4294.39990234375), classification0.getCenterY(), 0.01);
      assertEquals((-4294.4F), (float)float0, 0.01F);
      assertNotNull(float0);
      assertEquals((-398.8429870605469), classification0.getCenterX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(1.0F, 1.0F, 0.0F, 1.0F);
      Classification classification0 = new Classification(".", 1.0F, rectangle0);
      classification0.getCenterY();
      assertEquals(1392409281320L, (long)classification0.getTs());
      assertEquals(1.0F, classification0.getConfidence(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(1.0F, 1.0F, 0.0F, 1.0F);
      Classification classification0 = new Classification(".", 1.0F, rectangle0);
      String string0 = classification0.getLabel();
      assertNotNull(string0);
      assertEquals(1392409281320L, (long)classification0.getTs());
      assertEquals(1.0F, classification0.getConfidence(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(1.0F, 1.0F, 0.0F, 1.0F);
      Classification classification0 = new Classification(".", 1.0F, rectangle0);
      classification0.setBoundingBox((-898), 1114, 1114, 637);
      assertEquals(1.0F, classification0.getConfidence(), 0.01F);
      assertEquals(1392409281320L, (long)classification0.getTs());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Classification classification0 = new Classification("");
      Long long0 = classification0.getTs();
      assertNotNull(long0);
      assertEquals(1392409281320L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Classification classification0 = new Classification("M0V", 2813.873F, rectangle0, 0.0F, 0.0);
      classification0.getObject();
      assertEquals(0.0, classification0.getCenterX(), 0.01);
      assertEquals(0.0, classification0.getCenterY(), 0.01);
      assertEquals(1392409281320L, (long)classification0.getTs());
      assertEquals(2813.873F, classification0.getConfidence(), 0.01F);
  }
}
