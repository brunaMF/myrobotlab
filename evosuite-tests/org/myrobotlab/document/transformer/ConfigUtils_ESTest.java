/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 02:17:57 GMT 2024
 */

package org.myrobotlab.document.transformer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thoughtworks.xstream.XStream;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.myrobotlab.document.transformer.ConfigUtils;
import org.myrobotlab.document.transformer.WorkflowConfiguration;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConfigUtils_ESTest extends ConfigUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConfigUtils configUtils0 = new ConfigUtils();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XStream xStream0 = ConfigUtils.initXStream();
      WorkflowConfiguration workflowConfiguration0 = new WorkflowConfiguration();
      HashMap<Object, WorkflowConfiguration> hashMap0 = new HashMap<Object, WorkflowConfiguration>();
      hashMap0.put(xStream0, workflowConfiguration0);
      workflowConfiguration0.setMapProperty("", hashMap0);
      // Undeclared exception!
      try { 
        ConfigUtils.toXML(workflowConfiguration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No converter available
         // ---- Debugging information ----
         // message             : No converter available
         // type                : com.thoughtworks.xstream.mapper.DynamicProxyMapper
         // converter           : java.lang.String@0000002172
         // message[1]          : java.lang.String@0000002173
         // -------------------------------
         //
         verifyException("com.thoughtworks.xstream.core.DefaultConverterLookup", e);
      }
  }
}
