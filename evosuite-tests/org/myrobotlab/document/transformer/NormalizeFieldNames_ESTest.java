/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 02:22:20 GMT 2024
 */

package org.myrobotlab.document.transformer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.myrobotlab.document.Document;
import org.myrobotlab.document.transformer.NormalizeFieldNames;
import org.myrobotlab.document.transformer.StageConfiguration;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NormalizeFieldNames_ESTest extends NormalizeFieldNames_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NormalizeFieldNames normalizeFieldNames0 = new NormalizeFieldNames();
      Document document0 = new Document("");
      document0.addToField(" ", normalizeFieldNames0);
      List<Document> list0 = normalizeFieldNames0.processDocument(document0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NormalizeFieldNames normalizeFieldNames0 = new NormalizeFieldNames();
      Document document0 = new Document("1;LZr'");
      document0.setField("'N$j{<:8", (Object) normalizeFieldNames0);
      document0.setField("1;LZr'", (Object) normalizeFieldNames0);
      // Undeclared exception!
      try { 
        normalizeFieldNames0.processDocument(document0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NormalizeFieldNames normalizeFieldNames0 = new NormalizeFieldNames();
      // Undeclared exception!
      try { 
        normalizeFieldNames0.processDocument((Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.document.transformer.NormalizeFieldNames", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NormalizeFieldNames normalizeFieldNames0 = new NormalizeFieldNames();
      normalizeFieldNames0.flush();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NormalizeFieldNames normalizeFieldNames0 = new NormalizeFieldNames();
      normalizeFieldNames0.stopStage();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NormalizeFieldNames normalizeFieldNames0 = new NormalizeFieldNames();
      normalizeFieldNames0.startStage((StageConfiguration) null);
  }
}
