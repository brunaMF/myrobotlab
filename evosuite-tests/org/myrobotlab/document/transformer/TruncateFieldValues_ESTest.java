/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 02:35:53 GMT 2024
 */

package org.myrobotlab.document.transformer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.myrobotlab.document.Document;
import org.myrobotlab.document.transformer.StageConfiguration;
import org.myrobotlab.document.transformer.TruncateFieldValues;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TruncateFieldValues_ESTest extends TruncateFieldValues_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      Document document0 = new Document("7");
      document0.setField("7", (Object) "7");
      truncateFieldValues0.setInputField("7");
      truncateFieldValues0.processDocument(document0);
      assertEquals(1, truncateFieldValues0.getNumValues());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      truncateFieldValues0.setOutputField("#4 &&^N?8%a");
      truncateFieldValues0.getOutputField();
      assertEquals(1, truncateFieldValues0.getNumValues());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      truncateFieldValues0.setNumValues((-4359));
      int int0 = truncateFieldValues0.getNumValues();
      assertEquals((-4359), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      truncateFieldValues0.setInputField("(!(Nu(3ypf");
      truncateFieldValues0.getInputField();
      assertEquals(1, truncateFieldValues0.getNumValues());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      truncateFieldValues0.setInputField("");
      truncateFieldValues0.getInputField();
      assertEquals(1, truncateFieldValues0.getNumValues());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      StageConfiguration stageConfiguration0 = new StageConfiguration();
      stageConfiguration0.setStringParam("numValues", "\"(~2AWp3q2P");
      // Undeclared exception!
      try { 
        truncateFieldValues0.startStage(stageConfiguration0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"(~2AWp3q2P\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      StageConfiguration stageConfiguration0 = new StageConfiguration();
      stageConfiguration0.config = null;
      // Undeclared exception!
      try { 
        truncateFieldValues0.startStage(stageConfiguration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.document.transformer.StageConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      // Undeclared exception!
      try { 
        truncateFieldValues0.processDocument((Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.document.transformer.TruncateFieldValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      Document document0 = new Document("7");
      document0.setField("7", (Object) "7");
      truncateFieldValues0.setNumValues((-7));
      truncateFieldValues0.setInputField("7");
      // Undeclared exception!
      try { 
        truncateFieldValues0.processDocument(document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-7)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      Document document0 = new Document("7");
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      arrayList0.add(object0);
      document0.setField("7", arrayList0);
      truncateFieldValues0.setInputField("7");
      arrayList0.add((Object) document0);
      truncateFieldValues0.processDocument(document0);
      assertEquals(1, truncateFieldValues0.getNumValues());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      Document document0 = new Document("");
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      truncateFieldValues0.setOutputField("");
      assertEquals(1, truncateFieldValues0.getNumValues());
      
      Object object0 = new Object();
      arrayList0.add(object0);
      document0.setField("", arrayList0);
      truncateFieldValues0.setNumValues(0);
      truncateFieldValues0.setInputField("");
      truncateFieldValues0.processDocument(document0);
      assertEquals(0, truncateFieldValues0.getNumValues());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      Document document0 = new Document("7");
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      document0.setField("7", arrayList0);
      truncateFieldValues0.setInputField("7");
      truncateFieldValues0.processDocument(document0);
      assertEquals(1, truncateFieldValues0.getNumValues());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      Document document0 = new Document("7");
      truncateFieldValues0.processDocument(document0);
      assertEquals(1, truncateFieldValues0.getNumValues());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      truncateFieldValues0.setOutputField("com.thoughtworks.xstream.converters.extended.RegexPatternConverter");
      truncateFieldValues0.startStage((StageConfiguration) null);
      assertEquals(1, truncateFieldValues0.getNumValues());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      StageConfiguration stageConfiguration0 = new StageConfiguration();
      truncateFieldValues0.startStage(stageConfiguration0);
      assertEquals("org.myrobotlab.document.transformer.AbstractStage", stageConfiguration0.getStageClass());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      truncateFieldValues0.getOutputField();
      assertEquals(1, truncateFieldValues0.getNumValues());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      truncateFieldValues0.setOutputField("");
      truncateFieldValues0.getOutputField();
      assertEquals(1, truncateFieldValues0.getNumValues());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      truncateFieldValues0.flush();
      assertEquals(1, truncateFieldValues0.getNumValues());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      truncateFieldValues0.stopStage();
      assertEquals(1, truncateFieldValues0.getNumValues());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      truncateFieldValues0.getInputField();
      assertEquals(1, truncateFieldValues0.getNumValues());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      assertEquals(1, truncateFieldValues0.getNumValues());
      
      truncateFieldValues0.setNumValues(0);
      int int0 = truncateFieldValues0.getNumValues();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TruncateFieldValues truncateFieldValues0 = new TruncateFieldValues();
      int int0 = truncateFieldValues0.getNumValues();
      assertEquals(1, int0);
  }
}
