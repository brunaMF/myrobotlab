/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 00:59:59 GMT 2024
 */

package org.myrobotlab.io;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import org.myrobotlab.io.StreamIO;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StreamIO_ESTest extends StreamIO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("Q-suNZ;X");
      StreamIO.close((OutputStream) mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StreamIO.close((OutputStream) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StreamIO.close((InputStream) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      StreamIO.close((InputStream) pipedInputStream0, (OutputStream) pipedOutputStream0);
      assertEquals(0, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      StreamIO.close((InputStream) pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StreamIO streamIO0 = new StreamIO();
  }
}
