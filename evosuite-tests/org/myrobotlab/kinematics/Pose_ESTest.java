/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 01:49:15 GMT 2024
 */

package org.myrobotlab.kinematics;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.myrobotlab.kinematics.Pose;
import org.myrobotlab.kinematics.PoseMove;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Pose_ESTest extends Pose_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Pose pose0 = new Pose();
      pose0.setMoves((Map<String, PoseMove>) null);
      Map<String, PoseMove> map0 = pose0.getMoves();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Pose pose0 = new Pose();
      HashMap<String, PoseMove> hashMap0 = new HashMap<String, PoseMove>();
      pose0.moves = (Map<String, PoseMove>) hashMap0;
      Map<String, PoseMove> map0 = pose0.getMoves();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Pose pose0 = new Pose();
      HashMap<String, PoseMove> hashMap0 = new HashMap<String, PoseMove>();
      pose0.moves = (Map<String, PoseMove>) hashMap0;
      Double double0 = new Double(2721.898085019145);
      PoseMove poseMove0 = new PoseMove(2721.898085019145, double0);
      hashMap0.put("Pose{moves={}}", poseMove0);
      Map<String, PoseMove> map0 = pose0.getMoves();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Pose pose0 = new Pose();
      Pose pose1 = new Pose();
      boolean boolean0 = pose1.equals(pose0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Pose pose0 = new Pose();
      boolean boolean0 = pose0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Pose pose0 = new Pose();
      boolean boolean0 = pose0.equals(pose0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Pose pose0 = new Pose();
      Object object0 = new Object();
      boolean boolean0 = pose0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Pose pose0 = new Pose();
      String string0 = pose0.toString();
      assertEquals("Pose{moves={}}", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Pose pose0 = new Pose();
      pose0.hashCode();
  }
}
