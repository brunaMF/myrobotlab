/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 00:50:23 GMT 2024
 */

package org.myrobotlab.logging;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.myrobotlab.logging.LoggerFactory;
import org.slf4j.ILoggerFactory;
import org.slf4j.Logger;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LoggerFactory_ESTest extends LoggerFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Logger logger0 = LoggerFactory.getLogger(class0);
      assertNotNull(logger0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        LoggerFactory.getLogger((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name argument cannot be null
         //
         verifyException("ch.qos.logback.classic.LoggerContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Logger logger0 = LoggerFactory.getLogger("");
      assertNotNull(logger0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LoggerFactory loggerFactory0 = new LoggerFactory();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ILoggerFactory iLoggerFactory0 = LoggerFactory.getILoggerFactory();
      assertNotNull(iLoggerFactory0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        LoggerFactory.getLogger((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.logging.LoggerFactory", e);
      }
  }
}
