/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 01:47:06 GMT 2024
 */

package org.myrobotlab.math.geometry;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.myrobotlab.math.geometry.Point2df;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Point2df_ESTest extends Point2df_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Point2df point2df0 = new Point2df();
      point2df0.value = 0.0F;
      point2df0.value = (-2739.0F);
      float float0 = point2df0.get("y");
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Point2df point2df0 = new Point2df();
      point2df0.x = 0.0F;
      point2df0.x = 1094.6F;
      float float0 = point2df0.get("y");
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Point2df point2df0 = new Point2df(2580.357F, 1343.0417F, 1);
      assertEquals(1343.0417F, point2df0.y, 0.01F);
      assertEquals(1.0F, point2df0.value, 0.01F);
      assertEquals(2580.357F, point2df0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Point2df point2df0 = new Point2df(1739.111F, 1739.111F, 1739.111F);
      assertEquals(1739.111F, point2df0.x, 0.01F);
      assertEquals(1739.111F, point2df0.y, 0.01F);
      assertEquals(1739.111F, point2df0.value, 0.01F);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Point2df point2df0 = new Point2df(238.514F, 950.3487F);
      assertEquals(238.514F, point2df0.x, 0.01F);
      
      point2df0.x = (-1.0F);
      float float0 = point2df0.get("x");
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Point2df point2df0 = new Point2df(238.514F, 950.3487F);
      // Undeclared exception!
      try { 
        point2df0.get((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Point2df point2df0 = new Point2df(238.514F, 950.3487F);
      float float0 = point2df0.get("B3T)-{PuA#g5K");
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(238.514F, point2df0.x, 0.01F);
      assertEquals(950.3487F, point2df0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Point2df point2df0 = new Point2df(238.514F, 950.3487F);
      float float0 = point2df0.get("x");
      assertEquals(238.514F, float0, 0.01F);
      assertEquals(950.3487F, point2df0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Point2df point2df0 = new Point2df(238.514F, 950.3487F);
      String string0 = point2df0.toString();
      assertEquals("(238.514008,950.348694)", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Point2df point2df0 = new Point2df(2707.2F, 0.0F, 4316.55F);
      assertEquals(0.0F, point2df0.y, 0.01F);
      assertEquals(4316.55F, point2df0.value, 0.01F);
      assertEquals(2707.2F, point2df0.x, 0.01F);
  }
}
