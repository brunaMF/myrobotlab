/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 05:08:52 GMT 2024
 */

package org.myrobotlab.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.EOFException;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.myrobotlab.net.SslUtil;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SslUtil_ESTest extends SslUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      try { 
        SslUtil.getSocketFactory("f}=}fXa<t-w/TaO", "TLS", "TLS", "}-~hDsGva");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      try { 
        SslUtil.getSocketFactory((String) null, (String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("}gW");
      byte[] byteArray0 = new byte[11];
      byteArray0[1] = (byte) (-128);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      try { 
        SslUtil.getSocketFactory("}gW", "}gW", "}gW", "}gW");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("(>(AtC");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      try { 
        SslUtil.getSocketFactory("(>(AtC", "(>(AtC", "(>(AtC", "(>(AtC");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("NPS^12");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "f:n");
      try { 
        SslUtil.getSocketFactory("NPS^12", "NPS^12", "NPS^12", "NPS^12");
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SslUtil sslUtil0 = new SslUtil();
  }
}
