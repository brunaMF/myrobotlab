/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 03:16:25 GMT 2024
 */

package org.myrobotlab.serial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;
import org.myrobotlab.serial.PortStream;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PortStream_ESTest extends PortStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("PcEcCIN624i5", false);
      PortStream portStream0 = new PortStream("PcEcCIN624i5", byteArrayInputStream0, mockFileOutputStream0);
      boolean boolean0 = portStream0.setParams((-8), 0, 0, 2333);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("P>cEcCIN624i5", false);
      PortStream portStream0 = new PortStream("P>cEcCIN624i5", byteArrayInputStream0, mockFileOutputStream0);
      portStream0.write(4684);
      assertFalse(portStream0.debug);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PortStream portStream0 = new PortStream("sS6jfU$'c?N", mockFileInputStream0, (OutputStream) null);
      byte[] byteArray0 = portStream0.readBytes();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PortStream portStream0 = new PortStream("=,KT!|");
      OutputStream outputStream0 = portStream0.getOutputStream();
      assertNull(outputStream0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PortStream portStream0 = new PortStream("_5KOe");
      InputStream inputStream0 = portStream0.getInputStream();
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write(3783);
      PortStream portStream0 = new PortStream("", pipedInputStream0, pipedOutputStream0);
      int int0 = portStream0.available();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PortStream portStream0 = new PortStream("_5KOe");
      byte[] byteArray0 = new byte[17];
      // Undeclared exception!
      try { 
        portStream0.write(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.serial.PortStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PortStream portStream0 = new PortStream("", pipedInputStream0, pipedOutputStream0);
      try { 
        portStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PortStream portStream0 = new PortStream("$ 46R VFWRs4UQDL}", pipedInputStream0, pipedOutputStream0);
      try { 
        portStream0.write((-234));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PortStream portStream0 = new PortStream("_5K8e");
      // Undeclared exception!
      try { 
        portStream0.readBytes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.serial.PortStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PortStream portStream0 = new PortStream("");
      // Undeclared exception!
      try { 
        portStream0.available();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.serial.PortStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PortStream portStream0 = new PortStream("", pipedInputStream0, pipedOutputStream0);
      byte[] byteArray0 = portStream0.readBytes();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PortStream portStream0 = new PortStream((String) null, byteArrayInputStream0, pipedOutputStream0);
      byte[] byteArray1 = portStream0.readBytes();
      assertEquals(0, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PortStream portStream0 = new PortStream("_5KOe");
      portStream0.setInputStream((InputStream) null);
      assertFalse(portStream0.isListening());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("PcEcCIN624i5", false);
      PortStream portStream0 = new PortStream("PcEcCIN624i5", byteArrayInputStream0, mockFileOutputStream0);
      boolean boolean0 = portStream0.setParams((byte)0, (byte) (-36), 4684, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PortStream portStream0 = new PortStream("_5KYOe");
      boolean boolean0 = portStream0.isHardware();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("PcEcCIN624i5", false);
      PortStream portStream0 = new PortStream("PcEcCIN624i5", byteArrayInputStream0, mockFileOutputStream0);
      portStream0.write(byteArray0);
      assertEquals(10, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("PcEcCIN624i5", false);
      PortStream portStream0 = new PortStream("PcEcCIN624i5", byteArrayInputStream0, mockFileOutputStream0);
      OutputStream outputStream0 = portStream0.getOutputStream();
      assertSame(mockFileOutputStream0, outputStream0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("PcEcCIN624i5", false);
      PortStream portStream0 = new PortStream("PcEcCIN624i5", byteArrayInputStream0, mockFileOutputStream0);
      InputStream inputStream0 = portStream0.getInputStream();
      assertEquals(10, inputStream0.available());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PortStream portStream0 = new PortStream("%s-publisher", pipedInputStream0, byteArrayOutputStream0);
      int int0 = portStream0.available();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("PcEcCIN624i5", false);
      PortStream portStream0 = new PortStream("PcEcCIN624i5", byteArrayInputStream0, mockFileOutputStream0);
      portStream0.setOutputStream(mockFileOutputStream0);
      assertEquals(8, portStream0.getDataBits());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PortStream portStream0 = new PortStream("_5KO`De");
      // Undeclared exception!
      try { 
        portStream0.write(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.serial.PortStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PortStream portStream0 = new PortStream("_5K8e");
      List<String> list0 = portStream0.getPortNames();
      assertEquals(0, list0.size());
  }
}
