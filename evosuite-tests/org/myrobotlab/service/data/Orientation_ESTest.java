/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 04:25:19 GMT 2024
 */

package org.myrobotlab.service.data;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.myrobotlab.service.data.Orientation;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Orientation_ESTest extends Orientation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Double double0 = new Double(1112.0308429652);
      Double double1 = new Double(1112.0308429652);
      Orientation orientation0 = new Orientation(double0, double0, double1);
      orientation0.roll = double1;
      String string0 = orientation0.toString();
      assertEquals("Orientation [roll=1112.0308429652, pitch=1112.0308429652, yaw=1112.0308429652]", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double double0 = new Double(1112.0308429652);
      Double double1 = new Double(1112.0308429652);
      Orientation orientation0 = new Orientation(double0, double0, double1);
      String string0 = orientation0.toString();
      assertEquals("Orientation [roll=1112.0308429652, pitch=1112.0308429652, yaw=1112.0308429652]", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Double double0 = Double.valueOf(0.0);
      Orientation orientation0 = new Orientation(double0, double0, double0);
      Double double1 = new Double((double) orientation0.yaw);
      orientation0.setRoll(double1);
      assertEquals(0.0, orientation0.getRoll(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Double double0 = Double.valueOf(0.0);
      Orientation orientation0 = new Orientation(double0, double0, double0);
      Double double1 = new Double(0.0);
      orientation0.setYaw(double1);
      Double double2 = orientation0.getYaw();
      assertEquals(0.0, (double)double2, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Double double0 = new Double(1.0);
      Double double1 = new Double(1.0);
      Orientation orientation0 = new Orientation(double0, double1, double0);
      assertEquals(1.0, orientation0.getRoll(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      Double double0 = orientation0.getYaw();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      Double double0 = new Double((-214.1388636622));
      orientation0.setPitch(double0);
      orientation0.yaw = orientation0.pitch;
      Double double1 = orientation0.getYaw();
      assertEquals((-214.1388636622), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Double double0 = Double.valueOf(0.0);
      Orientation orientation0 = new Orientation(double0, double0, double0);
      Double double1 = orientation0.getRoll();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Double double0 = new Double(0.0);
      Orientation orientation0 = new Orientation(double0, double0, (Double) null);
      orientation0.setRoll((Double) null);
      Double double1 = orientation0.getRoll();
      assertNull(double1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      Double double0 = new Double((-1.0));
      orientation0.roll = double0;
      Double double1 = orientation0.getRoll();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double(0.0);
      Orientation orientation0 = new Orientation(double0, double0, (Double) null);
      Double double1 = orientation0.getPitch();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double double0 = new Double(1112.0308429652);
      Orientation orientation0 = new Orientation(double0, double0, double0);
      Double double1 = orientation0.getPitch();
      assertEquals(1112.0308429652, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      Double double0 = new Double((-1.0));
      orientation0.setPitch(double0);
      Double double1 = orientation0.getPitch();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Double double0 = new Double(1112.0308429652);
      Orientation orientation0 = new Orientation(double0, double0, double0);
      Double double1 = orientation0.getYaw();
      assertEquals(1112.0308429652, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double double0 = new Double(1112.0308429652);
      Orientation orientation0 = new Orientation(double0, double0, double0);
      Double double1 = orientation0.getRoll();
      assertEquals(1112.0308429652, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      Double double0 = orientation0.getPitch();
      assertNull(double0);
  }
}
