/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 04:24:10 GMT 2024
 */

package org.myrobotlab.service.data;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.myrobotlab.service.data.ImageData;
import org.myrobotlab.service.data.SearchResults;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SearchResults_ESTest extends SearchResults_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SearchResults searchResults0 = new SearchResults("");
      String string0 = searchResults0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SearchResults searchResults0 = new SearchResults("");
      String string0 = searchResults0.getTextAndImages();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SearchResults searchResults0 = new SearchResults("");
      String string0 = searchResults0.getText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SearchResults searchResults0 = new SearchResults("");
      String string0 = searchResults0.getHtml();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SearchResults searchResults0 = new SearchResults("");
      searchResults0.text = null;
      // Undeclared exception!
      try { 
        searchResults0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.service.data.SearchResults", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SearchResults searchResults0 = new SearchResults("hl@6T}O@e~>Y&l46uX=");
      searchResults0.text = null;
      // Undeclared exception!
      try { 
        searchResults0.getTextAndImages();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.service.data.SearchResults", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SearchResults searchResults0 = new SearchResults("a\"g\u0004sD9}={7WD.bH");
      searchResults0.text = null;
      // Undeclared exception!
      try { 
        searchResults0.getText();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.service.data.SearchResults", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SearchResults searchResults0 = new SearchResults((String) null);
      searchResults0.text = null;
      // Undeclared exception!
      try { 
        searchResults0.getHtml();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.service.data.SearchResults", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SearchResults searchResults0 = new SearchResults("");
      ImageData[] imageDataArray0 = new ImageData[3];
      ImageData imageData0 = new ImageData();
      imageDataArray0[0] = imageData0;
      imageDataArray0[1] = imageData0;
      imageDataArray0[2] = imageDataArray0[0];
      List<ImageData> list0 = List.of(imageDataArray0);
      searchResults0.images = list0;
      String string0 = searchResults0.getTextAndImages();
      assertEquals("\nnull\n\nnull\n\nnull\n", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SearchResults searchResults0 = new SearchResults("");
      List<String> list0 = List.of("", "<img width=\"300\" src=\"", "", "", "", "yELDM!OE.");
      searchResults0.text = list0;
      String string0 = searchResults0.getTextAndImages();
      assertEquals("<img width=\"300\" src=\"yELDM!OE.", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SearchResults searchResults0 = new SearchResults("(z8|lz^1uF");
      ImageData imageData0 = new ImageData();
      List<ImageData> list0 = List.of(imageData0, imageData0, imageData0, imageData0);
      searchResults0.images = list0;
      String string0 = searchResults0.getHtml();
      assertEquals("<img width=\"300\" src=\"null\" />\n<img width=\"300\" src=\"null\" />\n<img width=\"300\" src=\"null\" />\n<img width=\"300\" src=\"null\" />\n", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SearchResults searchResults0 = new SearchResults("");
      List<String> list0 = List.of("", "<img width=\"300\" src=\"", "", "", "", "yELDM!OE.");
      searchResults0.text = list0;
      String string0 = searchResults0.getHtml();
      assertEquals("<img width=\"300\" src=\"yELDM!OE.", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SearchResults searchResults0 = new SearchResults("");
      List<String> list0 = List.of("", "<img width=\"300\" src=\"", "", "", "", "yELDM!OE.");
      searchResults0.text = list0;
      String string0 = searchResults0.getText();
      assertEquals("<img width=\"300\" src=\"yELDM!OE.", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SearchResults searchResults0 = new SearchResults("~$c4Je9QCt.xB.Pdzz");
      List<String> list0 = List.of("~$c4Je9QCt.xB.Pdzz", "~$c4Je9QCt.xB.Pdzz");
      searchResults0.text = list0;
      String string0 = searchResults0.toString();
      assertEquals("~$c4Je9QCt.xB.Pdzz~$c4Je9QCt.xB.Pdzz", string0);
  }
}
