/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 01:04:51 GMT 2024
 */

package org.myrobotlab.string;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.myrobotlab.string.StringUtil;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringUtil_ESTest extends StringUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = StringUtil.removeEnd("d+L[", "L[");
      assertEquals("d+", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      List<String> list0 = StringUtil.chunkText("QGzPvYvVuF 1", 1);
      assertEquals(3, list0.size());
      assertFalse(list0.contains("QGzPvYvVuF 1"));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      List<String> list0 = StringUtil.chunkText("", (byte)0);
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = StringUtil.StringToMethodName("C:mrl.tstlibrarissrvicData.json\u0000\u0000\u0000\u0000");
      assertEquals("c:mrl.tstlibrarissrvicData.json\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-4);
      String string0 = StringUtil.bytesToHex(byteArray0);
      //  // Unstable assertion: assertEquals("00", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[1] = "1.0";
      stringArray0[3] = "4";
      String string0 = StringUtil.getLatestVersion(stringArray0);
      assertEquals("4", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[6] = "1.01.0";
      String string0 = StringUtil.getLatestVersion(stringArray0);
      assertEquals("1.01.0", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = StringUtil.replaceCharAt("[, 0)SzHnw_B-O!r<]", 4, 'G');
      assertEquals("[, 0GSzHnw_B-O!r<]", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = StringUtil.removeCharAt("org.myrobotlab.logging.Logging", 0);
      assertEquals("rg.myrobotlab.logging.Logging", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = StringUtil.removeCharAt("(", (byte)0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = StringUtil.removeChar("", 'v');
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = StringUtil.removeAccents("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      String string0 = StringUtil.getLatestVersion(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = StringUtil.bytesToHex(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtil.toString((List<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.string.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtil.replaceCharAt((String) null, (-1113), '6');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtil.removeCharAt((String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.string.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtil.removeCharAt("", (-4080));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtil.removeChar((String) null, '9');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.string.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("template.java");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "hello all you freaks0123456789ABCDEF");
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        StringUtil.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.string.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("template.java");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "@");
      String[] stringArray0 = new String[4];
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      try { 
        StringUtil.main(stringArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      try { 
        StringUtil.main((String[]) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtil.intArrayToString((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.string.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        StringUtil.intArrayToString(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("org.myrobotlab.string.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtil.chunkText((String) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.string.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtil.bytesToHex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.string.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtil.byteArrayToIntString((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.string.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtil.StringToMethodName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.myrobotlab.string.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      boolean boolean0 = StringUtil.isEmpty((String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      boolean boolean0 = StringUtil.isEmpty("J#yqn8y[.2f.xN!,");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = StringUtil.removeEnd("[", "directory copied from {} to {}");
      assertEquals("[", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = StringUtil.removeEnd(".", ".");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[7];
      String string0 = StringUtil.intArrayToString(intArray0);
      assertEquals("0,0,0,0,0,0,0", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      String string0 = StringUtil.byteArrayToIntString(byteArray0);
      assertNotNull(string0);
      assertEquals("0,0,0", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = StringUtil.byteArrayToIntString(byteArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = StringUtil.removeAccents((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = StringUtil.removeAccents("1");
      assertEquals("1", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      List<String> list0 = List.of("checkDir 6hrew", "checkDir 6hrew", "checkDir 6hrew");
      String string0 = StringUtil.toString(list0);
      assertEquals("[checkDir 6hrew, checkDir 6hrew, checkDir 6hrew]", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      List<String> list0 = StringUtil.chunkText("thisIsATest over here", 790);
      assertTrue(list0.contains("thisIsATest over here"));
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = StringUtil.removeEnd("U fUvv3't", "");
      assertEquals("U fUvv3't", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      boolean boolean0 = StringUtil.isEmpty("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = StringUtil.removeEnd((String) null, "$TJtHE~/");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = StringUtil.StringToMethodName("{} is not a file");
      assertEquals("{}IsNotAFile", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = StringUtil.StringToMethodName(" ");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = StringUtil.removeChar("-veD8[roDMZn},.[", '-');
      assertEquals("veD8[roDMZn},.[\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      String string0 = StringUtil.bytesToHex(byteArray0);
      assertEquals("0000000000000000000000000000", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "1";
      stringArray0[1] = "1.1.[d-d-,(T<JQG'l";
      String string0 = StringUtil.getLatestVersion(stringArray0);
      assertNotNull(string0);
      assertEquals("1.1.[d-d-,(T<JQG'l", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = StringUtil.getLatestVersion(stringArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = StringUtil.getLatestVersion((String[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtil.replaceCharAt("OQf", (-1985), 'x');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringUtil stringUtil0 = new StringUtil();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtil.removeCharAt(" +1&c{|_1dJII9jU)", (-2256));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
