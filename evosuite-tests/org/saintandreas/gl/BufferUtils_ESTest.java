/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 05:22:53 GMT 2024
 */

package org.saintandreas.gl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;
import java.nio.ShortBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.saintandreas.gl.BufferUtils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BufferUtils_ESTest extends BufferUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FloatBuffer floatBuffer0 = BufferUtils.getFloatBuffer(0);
      assertFalse(floatBuffer0.hasRemaining());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        BufferUtils.getShortBuffer((-2816));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // capacity < 0: (-5632 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        BufferUtils.getIntBuffer((-2040));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // capacity < 0: (-8160 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        BufferUtils.getByteBuffer((-2662));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // capacity < 0: (-2662 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteBuffer byteBuffer0 = BufferUtils.getByteBuffer(1010);
      assertEquals(1010, byteBuffer0.limit());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ShortBuffer shortBuffer0 = BufferUtils.getShortBuffer(2652);
      assertEquals("java.nio.DirectShortBufferU[pos=0 lim=2652 cap=2652]", shortBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IntBuffer intBuffer0 = BufferUtils.getIntBuffer(2652);
      assertEquals(2652, intBuffer0.capacity());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BufferUtils bufferUtils0 = new BufferUtils();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IntBuffer intBuffer0 = BufferUtils.getIntBuffer();
      assertEquals(1, intBuffer0.limit());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ShortBuffer shortBuffer0 = BufferUtils.getShortBuffer();
      assertEquals(1, shortBuffer0.remaining());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteBuffer byteBuffer0 = BufferUtils.getByteBuffer();
      assertEquals(1, byteBuffer0.capacity());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FloatBuffer floatBuffer0 = BufferUtils.getFloatBuffer();
      assertEquals(1, floatBuffer0.remaining());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        BufferUtils.getFloatBuffer((-2683));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // capacity < 0: (-10732 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }
}
